{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","views/dashboard/Dashboard.js"],"names":["module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","axios","require","fields","sorter","filter","Dashboard","useState","countOrg","setCountOrg","countMajor","setCountMajor","countJobseeker","setCountJobseeker","countRecruitmentNews","setCountRecruitmentNews","listVerified","setListVerified","countVerified","setCountVerified","useEffect","a","get","Config","response","status","data","count","toString","count_verify","console","log","message","getCountOrg","getCountMajor","getCountJobseeker","getCountRecruitmentNews","xs","sm","lg","text","header","color","width","content","cilShieldAlt","cilFile","cilUser","cilSpreadsheet","md","xl","className","items","striped","hover","scopedSlots","item","is_verify"],"mappings":"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","file":"static/js/17.53314baf.chunk.js","sourcesContent":["module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React, { useEffect, useState } from 'react'\r\nimport {\r\n  CBadge,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CCallout,\r\n  CWidgetIcon,\r\n  CDataTable,\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport { cilShieldAlt, cilFile, cilUser, cilSpreadsheet } from '@coreui/icons';\r\n\r\nimport * as Config from '../../reusable/Config';\r\nconst axios = require('axios');\r\nconst fields = [\r\n  {key: 'owner_id', sorter: true, filter: true},\r\n  {key: 'org_name', sorter: true, filter: true},\r\n  {key: 'phones', sorter: true, filter: true},\r\n  {key: 'description', sorter: true, filter: true},\r\n  {key: 'tax_id', sorter: true, filter: true},\r\n  {key: 'address', sorter: true, filter: true},\r\n  {key: 'is_verify', sorter: true, filter: true}\r\n];\r\nconst Dashboard = () => {\r\n\r\n  const [countOrg, setCountOrg] = useState('0');\r\n  const [countMajor, setCountMajor] = useState('0');\r\n  const [countJobseeker, setCountJobseeker] = useState('0');\r\n  const [countRecruitmentNews, setCountRecruitmentNews] = useState('0');\r\n  const [listVerified, setListVerified] = useState(null);\r\n  const [countVerified, setCountVerified] = useState('0');\r\n\r\n  useEffect(() => {\r\n    const getCountOrg = async () => {\r\n      try {\r\n        const response = await axios.get(Config.COUNT_ORGANIZATION);\r\n        if (response.status === 200) {\r\n          setCountOrg(response.data.count.toString());\r\n          setCountVerified(response.data.count_verify.toString());\r\n          setListVerified(response.data.data);\r\n        }\r\n      } catch (error) {\r\n        if (error.response.status !== undefined) {\r\n          console.log(error.response);\r\n        }\r\n        else {\r\n          console.log(error.message);\r\n        }\r\n      }\r\n    }\r\n    getCountOrg();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getCountMajor = async () => {\r\n      try {\r\n        const response = await axios.get(Config.COUNT_MAJOR);\r\n        if (response.status === 200) {\r\n          setCountMajor(response.data.count.toString());\r\n        }\r\n      } catch (error) {\r\n        if (error.response.status !== undefined) {\r\n          console.log(error.response);\r\n        }\r\n        else {\r\n          console.log(error.message);\r\n        }\r\n      }\r\n    }\r\n    getCountMajor();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getCountJobseeker = async () => {\r\n      try {\r\n        const response = await axios.get(Config.COUNT_JOBSEEKER);\r\n        if (response.status === 200) {\r\n          setCountJobseeker(response.data.count.toString());\r\n        }\r\n      } catch (error) {\r\n        if (error.response.status !== undefined) {\r\n          console.log(error.response);\r\n        }\r\n        else {\r\n          console.log(error.message);\r\n        }\r\n      }\r\n    }\r\n    getCountJobseeker();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getCountRecruitmentNews = async () => {\r\n      try {\r\n        const response = await axios.get(Config.COUNT_RECRUITMENTNEWS);\r\n        if (response.status === 200) {\r\n          setCountRecruitmentNews(response.data.count.toString());\r\n        }\r\n      } catch (error) {\r\n        if (error.response.status !== undefined) {\r\n          console.log(error.response);\r\n        }\r\n        else {\r\n          console.log(error.message);\r\n        }\r\n      }\r\n    }\r\n    getCountRecruitmentNews();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <CRow>\r\n        <CCol xs=\"12\" sm=\"6\" lg=\"3\">\r\n          <CWidgetIcon text=\"Organization\" header={countOrg} color=\"primary\">\r\n            <CIcon width={24} content={cilShieldAlt}/>\r\n          </CWidgetIcon>\r\n        </CCol>\r\n        <CCol xs=\"12\" sm=\"6\" lg=\"3\">\r\n          <CWidgetIcon text=\"Major\" header={countMajor} color=\"info\">\r\n            <CIcon width={24} content={cilFile}/>\r\n          </CWidgetIcon>\r\n        </CCol>\r\n        <CCol xs=\"12\" sm=\"6\" lg=\"3\">\r\n          <CWidgetIcon text=\"Recruitment News\" header={countRecruitmentNews} color=\"warning\">\r\n            <CIcon width={24} content={cilUser}/>\r\n          </CWidgetIcon>\r\n        </CCol>\r\n        <CCol xs=\"12\" sm=\"6\" lg=\"3\">\r\n          <CWidgetIcon text=\"Jobseeker\" header={countJobseeker} color=\"danger\">\r\n            <CIcon width={24} content={cilSpreadsheet}/>\r\n          </CWidgetIcon>\r\n        </CCol>\r\n      </CRow>\r\n      \r\n      <CRow>\r\n        <CCol>\r\n          <CCard>\r\n            <CCardHeader>\r\n              Analysis\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CRow>\r\n                <CCol xs=\"12\" md=\"12\" xl=\"12\">\r\n\r\n                  <CRow>\r\n                    <CCol sm=\"3\">\r\n                      <CCallout color=\"info\">\r\n                        <small className=\"text-muted\">Organizations is verified</small>\r\n                        <br />\r\n                        <strong className=\"h4\">{countVerified}</strong>\r\n                      </CCallout>\r\n                    </CCol>\r\n                    <CCol sm=\"3\">\r\n                      <CCallout color=\"danger\">\r\n                        <small className=\"text-muted\">Developing...</small>\r\n                        <br />\r\n                        <strong className=\"h4\">...</strong>\r\n                      </CCallout>\r\n                    </CCol>\r\n                    <CCol sm=\"3\">\r\n                      <CCallout color=\"info\">\r\n                        <small className=\"text-muted\">Developing...</small>\r\n                        <br />\r\n                        <strong className=\"h4\">...</strong>\r\n                      </CCallout>\r\n                    </CCol>\r\n                    <CCol sm=\"3\">\r\n                      <CCallout color=\"danger\">\r\n                        <small className=\"text-muted\">Developing...</small>\r\n                        <br />\r\n                        <strong className=\"h4\">...</strong>\r\n                      </CCallout>\r\n                    </CCol>\r\n                  </CRow>\r\n\r\n                  <hr className=\"mt-0\" />\r\n                </CCol>\r\n              </CRow>\r\n\r\n              <br />\r\n              <CRow>\r\n                <CCol xs=\"12\" lg=\"12\">\r\n                  <CCard>\r\n                    <CCardHeader>\r\n                      List Organizations\r\n                    </CCardHeader>\r\n                    <CCardBody>\r\n                      <CDataTable\r\n                        items={listVerified}\r\n                        fields={fields}\r\n                        striped\r\n                        hover\r\n                        scopedSlots={{\r\n                          'is_verify': (item) => (\r\n                            <td>\r\n                              <CBadge color={item.is_verify === 1 ? 'success' : 'danger'}>\r\n                                {item.is_verify === 1 ? 'verified' : 'pending'}\r\n                              </CBadge>\r\n                            </td>\r\n                          )\r\n                        }}\r\n                      >\r\n                      </CDataTable>\r\n                    </CCardBody>\r\n                  </CCard>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Dashboard\r\n"],"sourceRoot":""}