{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@coreui/icons/js/free/cil-plus.js","../node_modules/@coreui/icons/js/free/cil-monitor.js","views/pages/jobseeker/listJobseeker/ListJobseeker.js"],"names":["module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","cilPlus","cilMonitor","axios","require","fields","sorter","filter","label","ListJobseeker","useState","setJobseekerData","listJobseeker","setListJobseeker","currentPage","setCurrentPage","lastPage","setLastPage","prev","setPrev","next","setNext","useEffect","a","get","Config","response","status","data","current_page","last_page","prev_page_url","next_page_url","console","log","message","getListJobseeker","handleClick","link","col","className","aria-label","style","display","paddingRight","onClick","tabIndex","to","content","paddingBottom","xs","lg","items","striped","hover","scopedSlots","item","id","marginRight","cilPencil","cilTrash","color","is_verify"],"mappings":"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","file":"static/js/8.7d526cf8.chunk.js","sourcesContent":["module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export const cilPlus = [\"512 512\",\"<polygon fill='var(--ci-primary-color, currentColor)' points='440 240 272 240 272 72 240 72 240 240 72 240 72 272 240 272 240 440 272 440 272 272 440 272 440 240' class='ci-primary'/>\"]","export const cilMonitor = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M472,16H40A24.028,24.028,0,0,0,16,40V376a24.028,24.028,0,0,0,24,24H240v64H160v32H352V464H272V400H472a24.028,24.028,0,0,0,24-24V40A24.028,24.028,0,0,0,472,16Zm-8,352H48V272H464Zm0-128H48V48H464Z' class='ci-primary'/><rect width='32' height='32' x='400' y='304' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/>\"]","import React, {useState, useEffect} from \"react\";\r\nimport {\r\n  CBadge,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CDataTable,\r\n  CRow,\r\n  CDropdown,\r\n  CDropdownItem,\r\n  CDropdownMenu,\r\n  CDropdownToggle,\r\n} from '@coreui/react';\r\nimport CIcon from '@coreui/icons-react'\r\nimport {cilPlus, cilPencil, cilTrash, cilMonitor} from '@coreui/icons';\r\n\r\n// import jobseekerData from './JobseekerData';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport * as Config from '../../../../reusable/Config';\r\nconst axios = require('axios');\r\nconst fields = [\r\n  {key: 'rn_id', sorter: true, filter: true},\r\n  {key: 'user_id', sorter: true, filter: true},\r\n  {key: 'is_elect', sorter: true, filter: true},\r\n  {key: 'cv_path', sorter: true, filter: true},\r\n  {key: 'cover_letter_path', sorter: true, filter: true},\r\n  {key: 'exp_years', sorter: true, filter: true},\r\n  {key: 'updated_at', sorter: true, filter: true},\r\n  {\r\n    key: 'show_details',\r\n    label: '',\r\n    sorter: false,\r\n    filter: false\r\n  }\r\n];\r\n\r\nconst ListJobseeker = () => {\r\n  const [jobseekerData, setJobseekerData] = useState(null);\r\n  const [listJobseeker, setListJobseeker] = useState(null);\r\n  const [currentPage, setCurrentPage] = useState(null);\r\n  const [lastPage, setLastPage] = useState(null);\r\n  const [prev, setPrev] = useState(null);\r\n  const [next, setNext] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const getListJobseeker = async () => {\r\n      try {\r\n        const response = await axios.get(Config.LIST_JOBSEEKER);\r\n        if (response.status === 200) {\r\n          setListJobseeker(response.data.data);\r\n          setJobseekerData(response.data);\r\n          setCurrentPage(response.data.current_page);\r\n          setLastPage(response.data.last_page);\r\n          setPrev(response.data.prev_page_url);\r\n          setNext(response.data.next_page_url);\r\n        }\r\n      } catch (error) {\r\n        if (error.response.status !== undefined) {\r\n          console.log(error.response);\r\n        }\r\n        else {\r\n          console.log(error.message);\r\n        }\r\n      }\r\n    }\r\n    getListJobseeker();\r\n  }, []);\r\n\r\n  const handleClick = async (link) => {\r\n    try {\r\n      const response = await axios.get(link);\r\n      if (response.status === 200) {\r\n        setListJobseeker(response.data.data);\r\n        setJobseekerData(response.data);\r\n        setCurrentPage(response.data.current_page);\r\n        setLastPage(response.data.last_page);\r\n        setPrev(response.data.prev_page_url);\r\n        setNext(response.data.next_page_url);\r\n      }\r\n    } catch (error) {\r\n      if (error.response.status !== undefined) {\r\n        console.log(error.response);\r\n      }\r\n      else {\r\n        console.log(error.message);\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <CRow>\r\n        <CCol col=\"8\" className=\"text-left mb-3\">\r\n        <nav aria-label=\"Page navigation\" style={{display: 'inline-block', paddingRight: '30px'}}>\r\n          <ul className=\"pagination \">\r\n            {prev !== null ? \r\n            <li className=\"page-item\">\r\n              <button className=\"page-link\" onClick={() => handleClick(prev)} tabIndex=\"-1\">Previous</button>\r\n            </li>\r\n            : \r\n            <li className=\"page-item disabled\">\r\n              <NavLink className=\"page-link\" to=\"#\" tabIndex=\"-1\">Previous</NavLink>\r\n            </li>\r\n            }\r\n            {next !== null ? \r\n            <li className=\"page-item\">\r\n              <button className=\"page-link\" onClick={() => handleClick(next)}>Next</button>\r\n            </li>\r\n            : \r\n            <li className=\"page-item disabled\">\r\n              <NavLink className=\"page-link\" to=\"#\">Next</NavLink>\r\n            </li>\r\n            }\r\n          </ul>\r\n        </nav>\r\n        # Current Page {currentPage}/{lastPage}\r\n        </CCol>\r\n        <CCol col=\"4\" className=\"text-right mb-3\">\r\n          <NavLink className=\"btn btn-outline-info\" to=\"/manage/jobseekers/create\">\r\n            <CIcon content={cilPlus} style={{paddingBottom: '3px'}} /> Create New Jobseeker\r\n          </NavLink>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow>\r\n        \r\n        <CCol xs=\"12\" lg=\"12\">\r\n          <CCard>\r\n            <CCardHeader>\r\n              List Jobseeker\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CDataTable\r\n                items={listJobseeker}\r\n                fields={fields}\r\n                striped\r\n                hover\r\n                scopedSlots={{\r\n                  'show_details':\r\n                    (item) => (\r\n                      <td>\r\n                        <CDropdown className=\"m-1\">\r\n                          <CDropdownToggle>\r\n                            Options\r\n                          </CDropdownToggle>\r\n                          <CDropdownMenu>\r\n                            <CDropdownItem to={'/manage/jobseekers/detail/' + item.id}>\r\n                              <CIcon content={cilMonitor} className=\"text-info\" style={{marginRight: '3px'}} />\r\n                              Detail\r\n                            </CDropdownItem>\r\n                            <CDropdownItem>\r\n                              <CIcon content={cilPencil} className=\"text-warning\" style={{marginRight: '3px'}} />\r\n                              Update\r\n                            </CDropdownItem>\r\n                            <CDropdownItem>\r\n                              <CIcon content={cilTrash} className=\"text-danger\" style={{marginRight: '3px'}} />\r\n                              Delete\r\n                            </CDropdownItem>\r\n                          </CDropdownMenu>\r\n                        </CDropdown>\r\n                      </td>\r\n                    ),\r\n                  'is_elect': (item) => (\r\n                    <td>\r\n                      <CBadge color={item.is_verify === 1 ? 'success' : 'danger'}>\r\n                        {item.is_verify === 1 ? 'elected' : 'pending'}\r\n                      </CBadge>\r\n                    </td>\r\n                  )\r\n                }}\r\n              >\r\n              </CDataTable>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListJobseeker;\r\n"],"sourceRoot":""}